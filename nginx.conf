server {
    listen 443 ssl;
    server_name shapeup.cs.colman.ac.il;

    # ───────────────────────────────────────────────
    # Your SSL certificate and key (PEM format)
    # ───────────────────────────────────────────────
    ssl_certificate     /etc/nginx/ssl/CSB.crt;
    ssl_certificate_key /etc/nginx/ssl/myserver.key;

    root /usr/share/nginx/html;   # <-- “npm run build” output mounted here
    index index.html;

    # ───────────────────────────────────────────────
    # 1) WebSocket endpoint for /users-chat
    # ───────────────────────────────────────────────
    location ^~ /users-chat/ {
        # Forward WebSockets to your chat server on backend:3002
        proxy_pass http://backend:3002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_read_timeout 60s;
    }

    # ───────────────────────────────────────────────
    # 2) API: “Exact /gyms” (list or create)
    # ───────────────────────────────────────────────
    location = /gyms {
        proxy_pass http://backend:3000/gyms;   # Proxy /gyms → Node’s /gyms
        proxy_http_version 1.1;
        proxy_set_header Host            $host;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location = /gyms/ {
        # In case someone hits “/gyms/” with a trailing slash
        proxy_pass http://backend:3000/gyms/;
        proxy_http_version 1.1;
        proxy_set_header Host            $host;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ───────────────────────────────────────────────
    # 3) API: “/gyms/<24-hex-char-ID>” (single‐gym fetch/update/delete)
    #       We assume your Mongo IDs are exactly 24 hex digits.
    # ───────────────────────────────────────────────
    location ~ ^/gyms/[0-9a-fA-F]{24}$ {
        proxy_pass http://backend:3000;   # Nginx will forward /gyms/<id> as /gyms/<id>
        proxy_http_version 1.1;
        proxy_set_header Host            $host;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ───────────────────────────────────────────────
    # 4) Other backend API endpoints (not /gyms)
    #    For example: /api/..., /users/..., /reviews/..., /askChatAi/..., /creditcard/..., /purchase/...
    # ───────────────────────────────────────────────
    location ~ ^/(api|users|reviews|askChatAi|creditcard|purchase) {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Host            $host;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ───────────────────────────────────────────────
    # 5) Specific admin API routes (if you still expose these under /admin/... as JSON)
    # ───────────────────────────────────────────────
    location ~ ^/admin/(dashboardCounts|getGymOwnersStatus|updateGymOwnerStatus|revenue-by-(city|date)) {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Host            $host;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ───────────────────────────────────────────────
    # 6) Static file uploads (gym/user images, etc.)
    #    These requests come in as /src/uploads/... → backend:3000/src/uploads/...
    # ───────────────────────────────────────────────
    location /src/uploads/ {
        proxy_pass http://backend:3000/src/uploads/;
        proxy_http_version 1.1;
        proxy_set_header Host            $host;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ───────────────────────────────────────────────
    # 7) Any “frontend‐route” that begins with /gyms/, /dashboard/, /admin/, /login/, /register/, /user/ 
    #    should NOT be proxied to the API—rather, serve index.html so React Router can take over.
    # ───────────────────────────────────────────────
    location ~ ^/(admin|dashboard|gyms|login|register|user)/ {
        try_files $uri $uri/ /index.html;
    }

    # ───────────────────────────────────────────────
    # 8) Catch‐all for any other frontend route →
    #    Just serve index.html (React will handle routing entirely client‐side).
    # ───────────────────────────────────────────────
    location / {
        try_files $uri $uri/ /index.html;
    }

    # ───────────────────────────────────────────────
    # 9) Increase allowed upload size (if you need large images, etc.)
    # ───────────────────────────────────────────────
    client_max_body_size 10M;
}
